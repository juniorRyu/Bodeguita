/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CapaPresentacion;

import CapaDatos.Correlativo;
import CapaDatos.DetalleDeuda;
import CapaDatos.DetalleVenta;
import CapaDatos.Deuda;
import CapaDatos.Producto;
import CapaDatos.Venta;
import CapaNegocio.ClienteBD;
import CapaNegocio.CorrelativoBD;
import CapaNegocio.DetalleDeudaBD;
import CapaNegocio.DetalleVentaBD;
import CapaNegocio.DeudaBD;
import CapaNegocio.ProductoBD;
import CapaNegocio.VentaBD;
import java.util.Calendar;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author WALTER
 */
public class Venta_IU extends javax.swing.JInternalFrame {

    String serieActual = "";

    public Venta_IU() {
        initComponents();
        sacarFecha();

        sacarNro();
    }

    private void sacarFecha() {

        Calendar calendario = Calendar.getInstance();

        int dia = calendario.get(Calendar.DAY_OF_MONTH);
        int mes = calendario.get(Calendar.MONTH) + 1;
        int anio = calendario.get(Calendar.YEAR);
        String fecha = anio + "-" + mes + "-" + dia;
        txtFecha.setText(fecha);

    }

    private void sacarNro() {
        //PASO PARA CREAR UN OBJETO DE CORRELATIVOBD
        CorrelativoBD objeto_correlativoBD = new CorrelativoBD();
        String documento = "";
        //AQUI PREGUNTO SI EL TIPO DEL DOCUMENTO SELECCIONADO ES BOLETA
        if (cmbTipoDocumento.getSelectedItem() == "BOLETA") {
            //PASO PARA CAPTURAR documento DEL COMBOBOX
            documento = cmbTipoDocumento.getSelectedItem().toString();
            //PASO PARA CREAR lista_correlativos Y AHI ALMACENAR LOS DATOS DEL METODO sacarNro
            //REVISAR ESE METODO PARA VER COMO ESTA HECHA
            List<Correlativo> lista_correlativos = objeto_correlativoBD.sacarNro(documento);
            //PASOS PARA SACAR EL nro Y serie DE LA lista_correlativos
            String nro = lista_correlativos.get(0).getCoSerie();
            String serie = lista_correlativos.get(0).getCoNumeracion();
            //PASO PARA ENCONTRAR EL antiguoNro A PARTIR DE LA SERIE Y LE SUMO 1
            int antiguoNro = Integer.valueOf(serie) + 1;
            //PASO PARA CAPTURAR LA serieActual DE LA FUNCIÃ“N correlativo
            serieActual = correlativo(antiguoNro);
            //PASO PARA COLOCAR EN LA CAJA DE TEXTO txtNroComprobante EL nro Y LA serieActual
            txtNroComprobante.setText(nro + "-" + serieActual);

        }
    }

    private String correlativo(int antiguoNro) {
        String nuevoNro;
        String codTemporal = String.valueOf(antiguoNro);
        //CON LOS DIFERENTES IF AVERIGUO QUE NUMERO VIENE EN antiguNro
        //PARA PODER AGREGARLE LOS CEROS
        if (codTemporal.length() == 1) {
            nuevoNro = "00000" + antiguoNro;
        } else if (codTemporal.length() == 2) {
            nuevoNro = "0000" + antiguoNro;
        } else if (codTemporal.length() == 3) {
            nuevoNro = "000" + antiguoNro;
        } else if (codTemporal.length() == 4) {
            nuevoNro = "00" + antiguoNro;
        } else if (codTemporal.length() == 5) {
            nuevoNro = "0" + antiguoNro;
        } else {
            nuevoNro = "" + antiguoNro;
        }
        //PASO PARA RETORNAR EL nuevoNro
        return nuevoNro;
    }

    private void limpiarVenta() {

        txtCliente.setText("");
        txtDniRuc.setText("");
        txtTotalPagar.setText("0.0");
        txtPago.setText("");
        txtVuelto.setText("");
        txtCodigoBarras.setText("");
        cmbFormaPago.setSelectedItem("CONTADO");
        tabla_pedidos.clearSelection();
        //vaciar elementos del jtable
        limpiar_tabla_formulario();

        sacarNro();
    }
    
     private void limpiar_tabla_formulario() {
        DefaultTableModel tabla_temporal_pedidos= (DefaultTableModel) tabla_pedidos.getModel();
        tabla_temporal_pedidos.setRowCount(0);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_pedidos = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtTotalPagar = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBuscarCliente = new javax.swing.JButton();
        txtDniRuc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        txtPago = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtCodigoBarras = new javax.swing.JTextField();
        txtVuelto = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cmbFormaPago = new javax.swing.JComboBox<>();
        txtEstado = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cmbTipoDocumento = new javax.swing.JComboBox<>();
        txtNroComprobante = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        cmbMoneda = new javax.swing.JComboBox<>();
        btnRegistrar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnQuitar = new javax.swing.JButton();

        setClosable(true);
        setTitle("VENTAS");

        tabla_pedidos.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        tabla_pedidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "PRODUCTO", "CANTIDAD", "PRECIO", "IMPORTE"
            }
        ));
        jScrollPane1.setViewportView(tabla_pedidos);
        if (tabla_pedidos.getColumnModel().getColumnCount() > 0) {
            tabla_pedidos.getColumnModel().getColumn(0).setPreferredWidth(10);
            tabla_pedidos.getColumnModel().getColumn(1).setPreferredWidth(600);
            tabla_pedidos.getColumnModel().getColumn(2).setPreferredWidth(5);
            tabla_pedidos.getColumnModel().getColumn(3).setPreferredWidth(5);
            tabla_pedidos.getColumnModel().getColumn(4).setPreferredWidth(5);
        }

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel6.setText("TOTAL A PAGAR S/.");

        txtTotalPagar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtTotalPagar.setEnabled(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setText("RUC / DNI");

        btnBuscarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CapaPresentacion/Imagenes/lupa.gif"))); // NOI18N
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        txtDniRuc.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel4.setText("CLIENTE");

        txtCliente.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtCliente.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtDniRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarCliente)
                        .addGap(0, 260, Short.MAX_VALUE))
                    .addComponent(txtCliente))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarCliente)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtDniRuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtPago.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtPago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPagoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPagoKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("PAGO CON S/.");

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel3.setText("PRODUCTO");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("VUELTO S/.");

        txtCodigoBarras.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtCodigoBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoBarrasActionPerformed(evt);
            }
        });
        txtCodigoBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoBarrasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoBarrasKeyReleased(evt);
            }
        });

        txtVuelto.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel5.setText("FORMA DE PAGO");

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel12.setText("ESTADO");

        cmbFormaPago.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        cmbFormaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CONTADO", "CREDITO" }));

        txtEstado.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtEstado.setText("ATENDIDO");
        txtEstado.setEnabled(false);

        jLabel13.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel13.setText("DOCUMENTO");

        cmbTipoDocumento.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        cmbTipoDocumento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "BOLETA", "TICKET" }));

        txtNroComprobante.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtNroComprobante.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel14.setText("CORRELATIVO");

        jLabel15.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel15.setText("FECHA");

        txtFecha.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        txtFecha.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel16.setText("MONEDA");

        cmbMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SOLES", "DOLARES" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cmbTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtNroComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFecha, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(cmbMoneda, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel13)
                    .addComponent(cmbTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNroComprobante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel16)
                    .addComponent(cmbMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnRegistrar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CapaPresentacion/Imagenes/coins.png"))); // NOI18N
        btnRegistrar.setText("GUARDAR");
        btnRegistrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRegistrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnCerrar.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CapaPresentacion/Imagenes/cross.png"))); // NOI18N
        btnCerrar.setText("CERRAR");
        btnCerrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCerrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        btnQuitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CapaPresentacion/Imagenes/no.gif"))); // NOI18N
        btnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoBarras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnQuitar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(702, 702, 702)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(txtTotalPagar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPago)
                                    .addComponent(txtVuelto)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnQuitar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTotalPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(37, 37, 37)))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(txtPago, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVuelto, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRegistrar))
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed

        if (txtDniRuc.getText().length() > 0) {
            //PASO PARA CAPTURAR EL dni DE LA CAJA DE TEXTO
            String dni = txtDniRuc.getText().trim();
            //PASO PARA CREAR UN OBJETO DE CLIENTEBD
            ClienteBD objeto_clienteBD = new ClienteBD();
            //PASO PARA CREAR UNA TABLA TEMPORAL
            DefaultTableModel tabla_temporal;
            //PASO PARA METER A LA TABLA TEMPORAL LOS DATOS ENCONTRADOS
            //EL METODO buscarCliente
            tabla_temporal = objeto_clienteBD.buscarCliente(dni);
            //CON EL if PREGUNTO SI HAY DATOS EN LA TABLA TEMPORAL
            if (tabla_temporal.getRowCount() > 0) {
                //PASO PARA SACAR nombres,apellidos DE LA TABLA TEMPORAL
                String nombres = tabla_temporal.getValueAt(0, 1).toString();
                String apellidos = tabla_temporal.getValueAt(0, 2).toString();
                //PASO PARA MOSTRAR EN LA CAJA DE TEXTO txtCliente EL nombre y apellidos
                txtCliente.setText(nombres + " " + apellidos);

            } else {
                JOptionPane.showMessageDialog(null, "no se encontro datos...");
                txtDniRuc.requestFocus();
                txtDniRuc.setText("");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Ingrese un dni o ruc");
            txtDniRuc.requestFocus();
        }

    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void txtPagoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPagoKeyPressed

    private void txtPagoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPagoKeyReleased

        try {
            //PASO PARA CAPTURAR total_pagar Y pagaCon DE SUS RESPECTIVAS CAJAS DE TEXTO
            double total_pagar = Double.parseDouble(txtTotalPagar.getText());
            double pagaCon = Double.parseDouble(txtPago.getText());
            //PASO PARA ENCONTRAR EL vuelto QUE SE LE VA A DAR AL CLIENTE
            double vuelto = pagaCon - total_pagar;
            //PASO PARA MOSTRA EL vuelto EN LA CAJA DE TEXTO
            txtVuelto.setText("" + vuelto);

        } catch (Exception e) {

        }
    }//GEN-LAST:event_txtPagoKeyReleased

    private void txtCodigoBarrasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBarrasKeyReleased


    }//GEN-LAST:event_txtCodigoBarrasKeyReleased

     private int registrarVenta() {
        //PASOS PARA CREAR LOS OBJETOS DE VENTA
        Venta objeto_venta = new Venta();
        VentaBD objeto_ventaBD = new VentaBD();
        //PASO PARA CAPTURAR EL DOCUMENTO DEL COMBOBOX
        String documento = cmbTipoDocumento.getSelectedItem().toString();
        //PASOS PARA REGISTRAR LA VENTA
        objeto_venta.setvCorrelativo(txtNroComprobante.getText());
        objeto_venta.setvDocumento(documento);
        objeto_venta.setvFecha(txtFecha.getText());
        objeto_venta.setvTotalPagar(Double.parseDouble(txtTotalPagar.getText()));
        objeto_venta.setFormaPago(cmbFormaPago.getSelectedItem().toString());
        objeto_venta.setvMoneda(cmbMoneda.getSelectedItem().toString());
        objeto_venta.setvPago(Double.parseDouble(txtPago.getText()));
        objeto_venta.setvVuelto(Double.parseDouble(txtVuelto.getText()));
        objeto_venta.setEstado(txtEstado.getText());
        objeto_venta.setuDni(Login_IU.dni_publico);
        objeto_venta.setCliRucDni(txtDniRuc.getText());
        //AQUI CAPTURO EL idventa DESPUES DE REGISTRAR LA VENTA
        int idventa = objeto_ventaBD.registrarVenta(objeto_venta);
        //PASO PARA RETORNAR EL idventa GENERADA AL MOMENTO DE REGISTRAR LA VENTA
        return idventa;
    }
    
    private void registrarDetallePedidos(int idventa) {
        //PASO PARA CREAR UNA tabla_temporal_pedidos Y LUEGO tabla_pedidos LE PASE TODO SU MODELOS
        DefaultTableModel tabla_temporal_pedidos = (DefaultTableModel) tabla_pedidos.getModel();
        //PASOS PARA ENCONTRAR LA CANTIDAD DE PRODUCTOS QUE TENEMOS EN PEDIDO
        int cantPedidos = tabla_temporal_pedidos.getRowCount();
        //PASOS PARA CREAR LOS OBJETOS DE DETALLE VENTA
        DetalleVenta objeto_detalle = new DetalleVenta();
        DetalleVentaBD objeto_detalleBD = new DetalleVentaBD();
        //PASOS PARA CREAR LOS OBJETOS DE PRODUCTO
        Producto objeto_producto = new Producto();
        ProductoBD objeto_productoBD = new ProductoBD();
        //PASO PARA CREAR UNA TABLA TEMPORAL
        DefaultTableModel tabla_temporal;
        //PASOS PARA RECORRER TODOS LOS PEDIDOS DE LA TABLA DEL FORMULARIO
        //Y LO HACEMOS USANDO EL FOR, QUE NOS PERMITE RECORRER UNO POR UNO
        for (int i = 0; i < cantPedidos; i++) {
            //PASOS PARA REGISTRAR EL DETALLE DE LA VENTA
            objeto_detalle.setIdventa(idventa);
            objeto_detalle.setpSerie(tabla_temporal_pedidos.getValueAt(i, 0).toString());
            objeto_detalle.setCant((Integer) tabla_temporal_pedidos.getValueAt(i, 2));
            objeto_detalle.setPrecio((Double) tabla_temporal_pedidos.getValueAt(i, 3));
            objeto_detalle.setImporte((Double) tabla_temporal_pedidos.getValueAt(i, 4));
            objeto_detalleBD.registrarDetalleVenta(objeto_detalle);
            //PASOS PARA BUSCAR UN PRODUCTO, CON LA INTENCIÃ“N DE SACAR SU STOCK ACTUAL - stockBD
            String codigo_barras = tabla_temporal_pedidos.getValueAt(i, 0).toString();
            tabla_temporal = objeto_productoBD.buscarProducto(codigo_barras);
            int stockBD = Integer.parseInt(tabla_temporal.getValueAt(0, 4).toString());
            //PASOS PARA ENCONTRAR EL NUEVO STOCK DEL PRODUCTO Y DEJARLO LISTO PARA ACTUALIZARLO - nuevo_stock
            int cantPedido = (Integer) tabla_temporal_pedidos.getValueAt(i, 2);
            int nuevo_stock = stockBD - cantPedido;
            //PASOS PARA SOLO ACTUALIZAR EL STOCK DEL PRODUCTO
            objeto_producto.setpStock(nuevo_stock);
            objeto_producto.setpSerie(codigo_barras);
            objeto_productoBD.actualizarStockProducto(objeto_producto);
        }

    }
    
    private void actualizar_deuda(int idventa) {
        //PASOS PARA CREAR LOS OBJETOS DE DEUDA
        DeudaBD oDeudaBD = new DeudaBD();
        Deuda oDeuda = new Deuda();
        //PASO PARA CREAR UNA TABLA TEMPORAL
        DefaultTableModel tabla_temporal;
        //PASO PARA BUSCAR LA DEUDA DEL CLIENTE QUE LE ESTOY VENDIDENDO POR SU DNI o RUC
        tabla_temporal = oDeudaBD.buscarDeuda(txtDniRuc.getText(), "ABIERTO");
        //PASOS PARA SACAR SU iddeuda Y total_deuda_que_tiene GENERADA AL MOMENTO QUE LE APERTURARON UNA CUENTA
        int iddeuda = Integer.parseInt(tabla_temporal.getValueAt(0, 0).toString());
        double total_deuda_que_tiene = Double.parseDouble(tabla_temporal.getValueAt(0, 2).toString());
        //PASOS PARA REGISTRAR DETALLE DE DEUDA DE SU RESPECTIVA TABLA
        DetalleDeuda oDetalleDeuda = new DetalleDeuda();
        DetalleDeudaBD oDetalleDeudaBD = new DetalleDeudaBD();
        oDetalleDeuda.setIddeuda(iddeuda);
        oDetalleDeuda.setIdventa(idventa);
        oDetalleDeudaBD.registrarDetalleDeuda(oDetalleDeuda);
        //PASO PARA SACAR EL TOTAL A PAGAR DE LA CAJA DE TEXTO txtTotalPagar
        double total_pagar = Double.parseDouble(txtTotalPagar.getText());
        //PASO ENCONTRAR LA NUEVA DEUDA DEUDA QUE VA A TENER EL CLIENTE
        double nueva_deuda = total_deuda_que_tiene + total_pagar;
        //PASOS PARA ACTUALIZAR DEUDA EN SU RESPECTIVA TABLA
        oDeuda.setTotalDeuda(nueva_deuda);
        oDeuda.setAcuenta(0);//PONGO CERO PORQUE AQUI NO DEJA NADA A CUENTA, PORQUE ESTA COMPRANDO EL CLIENTE
        oDeuda.setSaldo(0);//PONGO CERO PORQUE AQUI NO DEJA NADA A SALDO, PORQUE ESTA COMPRANDO EL CLIENTE
        oDeuda.setFechacierre("0000-00-00");//ESO PONGO COMO VALOR, PORQUE NO ESTOY CERRANDO SU DEUDA
        oDeuda.setEstado("ABIERTO");//AQUI PONGO ABIERTO PORQUE SU DEUDA ESTA ABIERTO TODAVIA Y ES PORQUE SIGUE COMPRANDO
        oDeuda.setIddeuda(iddeuda);
        oDeudaBD.actualizarDeuda(oDeuda);
    }

    private void actualizar_correlativo(String documento) {
        //PASOS PARA CREAR LOS OBJETOS DE CORRELATIVO
        Correlativo objeto_correlativo = new Correlativo();
        CorrelativoBD objeto_correlativoBD = new CorrelativoBD();
        //PASOS PARA ACTUALIZAR UN CORRELATIVO
        //REVISAR CUAL ES LA CONSULTA DEL METODO actualizarCorrelativo
        //PARA QUE OBSERVEN COMO LO ACTUALIZA
        objeto_correlativo.setCoNumeracion(serieActual);
        objeto_correlativo.setCoDocumento(documento);
        objeto_correlativoBD.actualizarCorrelativo(objeto_correlativo);
    }
   
    

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        try {

            if (txtDniRuc.getText().length() > 0) {
                int cant = tabla_pedidos.getRowCount();
                if (cant > 0) {

                    //LLAMO A LA FUNCIÃ“N CREADA REGISTRAR VENTA
                    int idventa = registrarVenta();
                    //LLAMO A LA FUNCIÃ“N REGISTRAR DETALLE DE LAS VENTAS
                    registrarDetallePedidos(idventa);
                    //AQUI PREGUNTO SI LA VENTA SERA AL CREDITO
                    if (cmbFormaPago.getSelectedItem().equals("CREDITO")) {
                        //LLAMO A LA FUNCIÃ“N actualizar_deuda
                        actualizar_deuda(idventa);

                    }

                    //PASO PARA CAPTURAR UN DOCUMENTO DE UN COMBOBOX
                    String documento = cmbTipoDocumento.getSelectedItem().toString();
                    //LLAMO A LA FUNCIÃ“N actualzar_correlativo
                    actualizar_correlativo(documento);
                    //MUESTRO UN MENSAJE Y LIMPIO TODO DEL FORMULARIO
                    JOptionPane.showMessageDialog(null, "se regsitro con exito", "Exito", JOptionPane.INFORMATION_MESSAGE);
                    limpiarVenta();
                } else {
                    JOptionPane.showMessageDialog(null, "no hay productos en la lista", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Falta el cliente", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarActionPerformed
        //PASO PARA CAPTURAR UNA FILA SELECCIONADA DE LA TABLA DEL FORMULARIO
        int filaSeleccionada = tabla_pedidos.getSelectedRow();
        //CREO UN TRY CATCH PARA CAPTURAR ALGUN ERROR
        try {
            //PASO PARA CREAR UNA tabla_temporal_pedidos Y LUEGO tabla_pedidos LE PASE TODO SU MODELOS
            DefaultTableModel tabla_temporal_pedidos = (DefaultTableModel) tabla_pedidos.getModel();
            //PASO PARA ELIMINAR UNA FILA DE LA TABLA PEDIDOS A TRAVES DE LA FILA SELECCIONADA
            tabla_temporal_pedidos.removeRow(filaSeleccionada);
            //PASO PARA ACTUALIZAR LA tabla_pedidos DESPUES DE QUITAR UN PEDIDO
            tabla_pedidos.setModel(tabla_temporal_pedidos);
            //LAMO A LA FUNCIÃ“N calculaTotal PARA ACTUALIZAR EL NUEVO MONTO A PAGAR
            calculaTotal();

        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, "Error al quitar", "Error", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnQuitarActionPerformed

    private void txtCodigoBarrasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBarrasKeyPressed

    }//GEN-LAST:event_txtCodigoBarrasKeyPressed

    private void calculaTotal() {
        //PASO PARA CREAR UNA tabla_temporal_pedidos Y LUEGO tabla_pedidos LE PASE TODO SU MODELOS
        DefaultTableModel tabla_temporal_pedidos = (DefaultTableModel) tabla_pedidos.getModel();
        //PASOS PARA SACAR TODOS LOS PEDIDOS Y LUEGO METERLOS A maxPedidos
        int maxPedidos = tabla_temporal_pedidos.getRowCount();
        double total = 0;
        //USO EL FOR PARA RECORRER TODOS LOS PEDIDOS DE LA TABLA Y LUEGO IR SUMANDO LOS IMPORTES
        for (int i = 0; i < maxPedidos; i++) {
            //PASO PARA IR ACUMULANDO LA SUMA EN total DE TODOS LOS IMPORTES
            total = total + (Double) tabla_temporal_pedidos.getValueAt(i, 4);
        }
        //PASO PARA MOSTRAR EN LA CAJA DE TEXTO txtTotalPagar, CUAL ES MONTO TOTAL DE LOS IMPORTES
        txtTotalPagar.setText("" + total);
    }

    private void txtCodigoBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoBarrasActionPerformed
        //PASO PARA CAPTURAR EL CODIGO DE BARRA DEL PRODUCTO
        String codigo_barras = txtCodigoBarras.getText();
        //PASO PARA CREAR EL OBJETO DE PRODUCTO
        ProductoBD objeto_productoBD = new ProductoBD();
        //PASO PARA CREAR UNA TABLA TEMPORAL
        DefaultTableModel tabla_temporal;
        //PASO PARA METER LOS DATOS DEL buscarProducto A LA TABLA TEMPORAL
        tabla_temporal = objeto_productoBD.buscarProducto(codigo_barras);
        //CON ESTE if PREGUNTO SI HAY PRODUCTOS DENTRO DE LA TABLA TEMPORAL
        if (tabla_temporal.getRowCount() > 0) {
            //PASOS PARA SACAR LA serie,descripcion,precio DE LA TABLA TEMPORAL
            String serie = tabla_temporal.getValueAt(0, 0).toString();
            String descripcion = tabla_temporal.getValueAt(0, 1).toString();
            double precio = Double.parseDouble(tabla_temporal.getValueAt(0, 3).toString());
            int cantidad = 1;
            //PASO PARA ENCONTRAR EL importe
            double importe = precio * cantidad;
            //PASO PARA CREAR UNA tabla_temporal_pedidos Y LUEGO tabla_pedidos LE PASE TODO SU MODELOS
            DefaultTableModel tabla_temporal_pedidos = (DefaultTableModel) tabla_pedidos.getModel();
            //PASO PARA CREAR UN ARREGLO Y METER LA serie,descripcion,cantidad,precio,importe
            Object[] data = {serie, descripcion, cantidad, precio, importe};
            //PASO PARA METER EL ARREGLO data A LA TABLA TEMPORAL
            tabla_temporal_pedidos.addRow(data);
            txtCodigoBarras.setText("");
            //LLAMO A LA FUNCIÃ“N calculaTotal PARA ACTUALIZAR EL NUEVO MONTO A PAGAR
            calculaTotal();

        } else {
            JOptionPane.showMessageDialog(null, "no se encontro datos...");
            txtCodigoBarras.setText("");
        }
    }//GEN-LAST:event_txtCodigoBarrasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnQuitar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cmbFormaPago;
    private javax.swing.JComboBox<String> cmbMoneda;
    private javax.swing.JComboBox<String> cmbTipoDocumento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable tabla_pedidos;
    private javax.swing.JTextField txtCliente;
    public static javax.swing.JTextField txtCodigoBarras;
    private javax.swing.JTextField txtDniRuc;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtNroComprobante;
    private javax.swing.JTextField txtPago;
    private javax.swing.JTextField txtTotalPagar;
    private javax.swing.JTextField txtVuelto;
    // End of variables declaration//GEN-END:variables
}
